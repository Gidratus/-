// Архиватор (Рубцов Юра).cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <string>

using namespace std;
// Функция для сжатия строки
string compress(const string& input) {
    string compressed;
    // Проходим по каждому символу входной строки
    for (int i = 0; i < input.length(); i++) {
        char sym = input[i];
        int repeat = 1;
        // Подсчет повторяющихся символов
        while (i < input.length() - 1 && sym == input[i + 1]) {
            repeat++;
            i++;
        }
        // Добавление символа и количества повторений к сжатой строке
        compressed += sym;
        if (repeat > 1) {
            compressed += to_string(repeat);
        }
    }

    return compressed;
}
// Функция для деархивации строки
string decompress(const string& input) {
    string decompressed;
    // Проходим по каждому символу входной строки
    for (int i = 0; i < input.length(); i++) {
        char sym = input[i];
        // Если текущий символ - цифра, то это количество повторений
        if (isdigit(sym)) {
            int repeat = sym - '0';
            decompressed += string(repeat, input[i - 1]);
        }
        else {
            decompressed += sym; // Добавляем текущий символ к деархивированной строке
        }
    }

    return decompressed;
}
// Основная функция программы
int main() {
    setlocale(0, "");

    string input;
    string output;
    // Ввод строки для архивации
    cout << "Введите строку для архивации: ";
    cin >> input;
    // Сжатие строки и вывод результата
    output = compress(input);
    cout << "Сжатие: " << output << endl;

    input = "";
    output = "";
    // Ввод строки для деархивации
    cout << "Введите строку для разархивации: ";
    cin >> input;
    // Деархивация строки и вывод результата
    output = decompress(input);
    cout << "Деархивация: " << output << endl;

    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
